/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Ddd as PrismaDdd } from "@prisma/client";

export class DddServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DddCountArgs, "select">): Promise<number> {
    return this.prisma.ddd.count(args);
  }

  async ddds(args: Prisma.DddFindManyArgs): Promise<PrismaDdd[]> {
    return this.prisma.ddd.findMany(args);
  }
  async ddd(args: Prisma.DddFindUniqueArgs): Promise<PrismaDdd | null> {
    return this.prisma.ddd.findUnique(args);
  }
  async createDdd(args: Prisma.DddCreateArgs): Promise<PrismaDdd> {
    return this.prisma.ddd.create(args);
  }
  async updateDdd(args: Prisma.DddUpdateArgs): Promise<PrismaDdd> {
    return this.prisma.ddd.update(args);
  }
  async deleteDdd(args: Prisma.DddDeleteArgs): Promise<PrismaDdd> {
    return this.prisma.ddd.delete(args);
  }
}
